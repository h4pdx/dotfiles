
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
"Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'roman/golden-ratio'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'lervag/vimtex'
Plugin 'junegunn/seoul256.vim'
Plugin 'jeffkreeftmeijer/vim-numbertoggle'
Plugin 'sheerun/vim-polyglot'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'rainbow_parentheses.vim'

" -----------------------------------
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

au VimEnter * RainbowParenthesesToggle
au VimEnter * RainbowParenthesesLoadRound
au VimEnter * RainbowParenthesesLoadSquare
au VimEnter * RainbowParenthesesLoadBraces

" -----------------------------------

let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1

" -----------------------------------

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
" vim-airline
"Automatically displays all buffers when there's only one tab open.
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
let g:airline_theme="distinguished"

let g:seoul256_background=234
colo seoul256

"--------------------------------------------
" Usability options

syntax enable

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Highlight searches
"set hlsearch
" Highlight searches without requiring :noh afterwards
set incsearch nohlsearch

" Disable swap and backup files
set noswapfile
set nobackup
set undofile
set undodir=~/.vim/undo

" Indent options
set autoindent
set softtabstop=4
set shiftwidth=4

" Use spaces instead of tabs
set expandtab

" remember last cursor position
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" removes delay from inserting new line with O
set ttimeoutlen=100
set colorcolumn=80
" Fix persistent save and quit errors
command W w
command Q q

" Clear highlighted search
nmap <leader>q :nohlsearch<CR>
"
" "------------------------------------------------------------
" " Functions
"
" "relative number function toggle
function! NumberToggle()
    if(&relativenumber == 1)
        set norelativenumber
        set number
    elseif(&number == 1)
        set nonumber
    else
        set relativenumber
    endif
endfunc
nnoremap <silent> <C-n> :call NumberToggle()<cr>

"colorscheme default
set mouse=a
set number
set ruler
highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE 
set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.
set showmatch           " highlight matching [{()}]
"set laststatus=2
"set statusline=%t "tail of the filename
"set statusline+=%h "help-file flag
"set statusline+=%m "modified-file flag
"set statusline+=%r "read-only flag
"set statusline+=%y "filetype
"set statusline+=%= "visual space break, left/right seperator
"set statusline+=%l,%c/%L "line number, column/total lines
"set statusline=+\ %P "percent thru file
"set shiftwidth=4

"set tabstop=4
"set showcmd " show command in bottom bar
"set expandtab       " tabs are spaces
"set softtabstop=4   " number of spaces in tab when editing
"filetype indent on      " load filetype-specific indent files
"set incsearch           " search as characters are entered
"set hlsearch            " highlight matches
" turn off search highlight
"nnoremap <leader><space> :nohlsearch<CR>
"set foldenable          " enable folding
"set foldlevelstart=10   " open most folds by default
"set foldnestmax=10      " 10 nested fold max
"set foldmethod=indent   " fold based on indent level
" highlight last inserted text
"nnoremap gV `[v`]

